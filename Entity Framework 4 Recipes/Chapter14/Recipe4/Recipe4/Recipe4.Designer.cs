//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Recipe4
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForumPost> ForumPosts
        {
            get
            {
                if ((_ForumPosts == null))
                {
                    _ForumPosts = base.CreateObjectSet<ForumPost>("ForumPosts");
                }
                return _ForumPosts;
            }
        }
        private ObjectSet<ForumPost> _ForumPosts;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForumPosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForumPosts(ForumPost forumPost)
        {
            base.AddObject("ForumPosts", forumPost);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="ForumPost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForumPost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForumPost object.
        /// </summary>
        /// <param name="postingId">Initial value of the PostingId property.</param>
        /// <param name="post">Initial value of the Post property.</param>
        /// <param name="forumUser">Initial value of the ForumUser property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ForumPost CreateForumPost(global::System.Int32 postingId, global::System.String post, global::System.String forumUser, global::System.Byte[] timeStamp, global::System.Boolean isActive)
        {
            ForumPost forumPost = new ForumPost();
            forumPost.PostingId = postingId;
            forumPost.Post = post;
            forumPost.ForumUser = forumUser;
            forumPost.TimeStamp = timeStamp;
            forumPost.IsActive = isActive;
            return forumPost;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostingId
        {
            get
            {
                return _PostingId;
            }
            set
            {
                if (_PostingId != value)
                {
                    OnPostingIdChanging(value);
                    ReportPropertyChanging("PostingId");
                    _PostingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostingId");
                    OnPostingIdChanged();
                }
            }
        }
        private global::System.Int32 _PostingId;
        partial void OnPostingIdChanging(global::System.Int32 value);
        partial void OnPostingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ForumUser
        {
            get
            {
                return _ForumUser;
            }
            set
            {
                OnForumUserChanging(value);
                ReportPropertyChanging("ForumUser");
                _ForumUser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ForumUser");
                OnForumUserChanged();
            }
        }
        private global::System.String _ForumUser;
        partial void OnForumUserChanging(global::System.String value);
        partial void OnForumUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] TimeStamp
        {
            get
            {
                return StructuralObject.GetValidValue(_TimeStamp);
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.Byte[] _TimeStamp;
        partial void OnTimeStampChanging(global::System.Byte[] value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }

    #endregion
    
}
