//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

#region EDM Relationship Metadata
[assembly: EdmRelationshipAttribute("EFRecipesModel", "OrderStatusOrder", "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe9.OrderStatus), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe9.Order), true)]
[assembly: EdmRelationshipAttribute("EFRecipesModel", "ShippingTypeOrder", "ShippingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe9.ShippingType), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe9.Order), true)]
[assembly: EdmRelationshipAttribute("EFRecipesModel", "TransactionTypeOrder", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe9.TransactionType), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe9.Order), true)]
#endregion

namespace Recipe9
{
    #region Contexts
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            OnContextCreated();
        }
        #endregion
        
        #region Partial Methods
        partial void OnContextCreated();
        #endregion
        
        #region ObjectSet Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lookup> Lookups
        {
            get
            {
                if ((_Lookups == null))
                {
                    _Lookups = base.CreateObjectSet<Lookup>("Lookups");
                }
                return _Lookups;
            }
        }
        private ObjectSet<Lookup> _Lookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        #endregion
        #region AddTo Methods
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Lookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLookups(Lookup lookup)
        {
            base.AddObject("Lookups", lookup);
        }
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
        #endregion
    }
    
    #endregion
    
    
    #region Entities
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Lookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(OrderStatus))]
    [KnownTypeAttribute(typeof(ShippingType))]
    [KnownTypeAttribute(typeof(TransactionType))]
    public abstract partial class Lookup : EntityObject
    {
        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupId
        {
            get
            {
                return _LookupId;
            }
            set
            {
                if (_LookupId != value)
                {
                    OnLookupIdChanging(value);
                    ReportPropertyChanging("LookupId");
                    _LookupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupId");
                    OnLookupIdChanged();
                }
            }
                
        }
        private global::System.Int32 _LookupId;
        partial void OnLookupIdChanging(global::System.Int32 value);
        partial void OnLookupIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
                
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
        
        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="orderStatusId">Initial value of the OrderStatusId property.</param>
        /// <param name="transactionTypeId">Initial value of the TransactionTypeId property.</param>
        /// <param name="shippingTypeId">Initial value of the ShippingTypeId property.</param>
        public static Order CreateOrder(global::System.Int32 orderId, global::System.Decimal amount, global::System.Int32 orderStatusId, global::System.Int32 transactionTypeId, global::System.Int32 shippingTypeId)
        {
            Order order = new Order();
            order.OrderId = orderId;
            
            order.Amount = amount;
            
            order.OrderStatusId = orderStatusId;
            
            order.TransactionTypeId = transactionTypeId;
            
            order.ShippingTypeId = shippingTypeId;
            
            return order;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
                
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
                
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderStatusId
        {
            get
            {
                return _OrderStatusId;
            }
            set
            {
                OnOrderStatusIdChanging(value);
                ReportPropertyChanging("OrderStatusId");
                _OrderStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderStatusId");
                OnOrderStatusIdChanged();
            }
                
        }
        private global::System.Int32 _OrderStatusId;
        partial void OnOrderStatusIdChanging(global::System.Int32 value);
        partial void OnOrderStatusIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeId
        {
            get
            {
                return _TransactionTypeId;
            }
            set
            {
                OnTransactionTypeIdChanging(value);
                ReportPropertyChanging("TransactionTypeId");
                _TransactionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTypeId");
                OnTransactionTypeIdChanged();
            }
                
        }
        private global::System.Int32 _TransactionTypeId;
        partial void OnTransactionTypeIdChanging(global::System.Int32 value);
        partial void OnTransactionTypeIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShippingTypeId
        {
            get
            {
                return _ShippingTypeId;
            }
            set
            {
                OnShippingTypeIdChanging(value);
                ReportPropertyChanging("ShippingTypeId");
                _ShippingTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShippingTypeId");
                OnShippingTypeIdChanged();
            }
                
        }
        private global::System.Int32 _ShippingTypeId;
        partial void OnShippingTypeIdChanging(global::System.Int32 value);
        partial void OnShippingTypeIdChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "OrderStatusOrder", "OrderStatus")] 
        public OrderStatus OrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("EFRecipesModel.OrderStatusOrder", "OrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("EFRecipesModel.OrderStatusOrder", "OrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatus> OrderStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("EFRecipesModel.OrderStatusOrder", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatus>("EFRecipesModel.OrderStatusOrder", "OrderStatus", value);
                }
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "ShippingTypeOrder", "ShippingType")] 
        public ShippingType ShippingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShippingType>("EFRecipesModel.ShippingTypeOrder", "ShippingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShippingType>("EFRecipesModel.ShippingTypeOrder", "ShippingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShippingType> ShippingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShippingType>("EFRecipesModel.ShippingTypeOrder", "ShippingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShippingType>("EFRecipesModel.ShippingTypeOrder", "ShippingType", value);
                }
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "TransactionTypeOrder", "TransactionType")] 
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EFRecipesModel.TransactionTypeOrder", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EFRecipesModel.TransactionTypeOrder", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EFRecipesModel.TransactionTypeOrder", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("EFRecipesModel.TransactionTypeOrder", "TransactionType", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="OrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatus : Lookup
    {
        #region Factory Method
        /// <summary>
        /// Create a new OrderStatus object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static OrderStatus CreateOrderStatus(global::System.Int32 lookupId, global::System.String value)
        {
            OrderStatus orderStatus = new OrderStatus();
            orderStatus.LookupId = lookupId;
            
            orderStatus.Value = value;
            
            return orderStatus;
        }
        #endregion

    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "OrderStatusOrder", "Order")] 
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EFRecipesModel.OrderStatusOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EFRecipesModel.OrderStatusOrder", "Order", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="ShippingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShippingType : Lookup
    {
        #region Factory Method
        /// <summary>
        /// Create a new ShippingType object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ShippingType CreateShippingType(global::System.Int32 lookupId, global::System.String value)
        {
            ShippingType shippingType = new ShippingType();
            shippingType.LookupId = lookupId;
            
            shippingType.Value = value;
            
            return shippingType;
        }
        #endregion

    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "ShippingTypeOrder", "Order")] 
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EFRecipesModel.ShippingTypeOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EFRecipesModel.ShippingTypeOrder", "Order", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : Lookup
    {
        #region Factory Method
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="lookupId">Initial value of the LookupId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 lookupId, global::System.String value)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.LookupId = lookupId;
            
            transactionType.Value = value;
            
            return transactionType;
        }
        #endregion

    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "TransactionTypeOrder", "Order")] 
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EFRecipesModel.TransactionTypeOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EFRecipesModel.TransactionTypeOrder", "Order", value);
                }
            }
        }
        #endregion
    }
    
    #endregion
    
}
