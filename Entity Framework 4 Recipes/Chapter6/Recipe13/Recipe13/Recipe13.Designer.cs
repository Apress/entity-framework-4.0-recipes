//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

#region EDM Relationship Metadata
[assembly: EdmRelationshipAttribute("EFRecipesModel", "CarDealer", "Car", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe13.Car), "Dealer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe13.Dealer))]
#endregion

namespace Recipe13
{
    #region Contexts
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            OnContextCreated();
        }
        #endregion
        
        #region Partial Methods
        partial void OnContextCreated();
        #endregion
        
        #region ObjectSet Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dealer> Dealers
        {
            get
            {
                if ((_Dealers == null))
                {
                    _Dealers = base.CreateObjectSet<Dealer>("Dealers");
                }
                return _Dealers;
            }
        }
        private ObjectSet<Dealer> _Dealers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Car> CarSet
        {
            get
            {
                if ((_CarSet == null))
                {
                    _CarSet = base.CreateObjectSet<Car>("CarSet");
                }
                return _CarSet;
            }
        }
        private ObjectSet<Car> _CarSet;
    
        #endregion
        #region AddTo Methods
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Dealers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealers(Dealer dealer)
        {
            base.AddObject("Dealers", dealer);
        }
            
        /// <summary>
        /// Deprecated Method for adding a new object to the CarSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarSet(Car car)
        {
            base.AddObject("CarSet", car);
        }
        #endregion
    }
    
    #endregion
    
    
    #region Entities
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="BMW")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BMW : Car
    {
        #region Factory Method
        /// <summary>
        /// Create a new BMW object.
        /// </summary>
        /// <param name="carId">Initial value of the CarId property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="collisionAvoidance">Initial value of the CollisionAvoidance property.</param>
        public static BMW CreateBMW(global::System.Int32 carId, global::System.String model, global::System.String year, global::System.String color, global::System.Boolean collisionAvoidance)
        {
            BMW bMW = new BMW();
            bMW.CarId = carId;
            
            bMW.Model = model;
            
            bMW.Year = year;
            
            bMW.Color = color;
            
            bMW.CollisionAvoidance = collisionAvoidance;
            
            return bMW;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CollisionAvoidance
        {
            get
            {
                return _CollisionAvoidance;
            }
            set
            {
                OnCollisionAvoidanceChanging(value);
                ReportPropertyChanging("CollisionAvoidance");
                _CollisionAvoidance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollisionAvoidance");
                OnCollisionAvoidanceChanged();
            }
                
        }
        private global::System.Boolean _CollisionAvoidance;
        partial void OnCollisionAvoidanceChanging(global::System.Boolean value);
        partial void OnCollisionAvoidanceChanged();
        
        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Car")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BMW))]
    [KnownTypeAttribute(typeof(Toyota))]
    public abstract partial class Car : EntityObject
    {
        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarId
        {
            get
            {
                return _CarId;
            }
            set
            {
                if (_CarId != value)
                {
                    OnCarIdChanging(value);
                    ReportPropertyChanging("CarId");
                    _CarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CarId");
                    OnCarIdChanged();
                }
            }
                
        }
        private global::System.Int32 _CarId;
        partial void OnCarIdChanging(global::System.Int32 value);
        partial void OnCarIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
                
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
                
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
                
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "CarDealer", "Dealer")] 
        public Dealer Dealer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("EFRecipesModel.CarDealer", "Dealer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("EFRecipesModel.CarDealer", "Dealer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dealer> DealerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealer>("EFRecipesModel.CarDealer", "Dealer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealer>("EFRecipesModel.CarDealer", "Dealer", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Dealer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dealer : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Dealer object.
        /// </summary>
        /// <param name="dealerId">Initial value of the DealerId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Dealer CreateDealer(global::System.Int32 dealerId, global::System.String name)
        {
            Dealer dealer = new Dealer();
            dealer.DealerId = dealerId;
            
            dealer.Name = name;
            
            return dealer;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealerId
        {
            get
            {
                return _DealerId;
            }
            set
            {
                if (_DealerId != value)
                {
                    OnDealerIdChanging(value);
                    ReportPropertyChanging("DealerId");
                    _DealerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealerId");
                    OnDealerIdChanged();
                }
            }
                
        }
        private global::System.Int32 _DealerId;
        partial void OnDealerIdChanging(global::System.Int32 value);
        partial void OnDealerIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
                
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "CarDealer", "Car")] 
        public EntityCollection<Car> Cars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Car>("EFRecipesModel.CarDealer", "Car");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Car>("EFRecipesModel.CarDealer", "Car", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Toyota")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Toyota : Car
    {
        #region Factory Method
        /// <summary>
        /// Create a new Toyota object.
        /// </summary>
        /// <param name="carId">Initial value of the CarId property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        public static Toyota CreateToyota(global::System.Int32 carId, global::System.String model, global::System.String year, global::System.String color)
        {
            Toyota toyota = new Toyota();
            toyota.CarId = carId;
            
            toyota.Model = model;
            
            toyota.Year = year;
            
            toyota.Color = color;
            
            return toyota;
        }
        #endregion

    
    }
    
    #endregion
    
}
