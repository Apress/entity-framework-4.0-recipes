//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EFRecipesModel", "FK_Ticket_Vehicle", "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe16.Vehicle), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe16.Ticket), true)]

#endregion

namespace Recipe16
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="ticketId">Initial value of the TicketId property.</param>
        /// <param name="issueDate">Initial value of the IssueDate property.</param>
        /// <param name="violation">Initial value of the Violation property.</param>
        /// <param name="licenseNumber">Initial value of the LicenseNumber property.</param>
        public static Ticket CreateTicket(global::System.Int32 ticketId, global::System.DateTime issueDate, global::System.String violation, global::System.String licenseNumber)
        {
            Ticket ticket = new Ticket();
            ticket.TicketId = ticketId;
            ticket.IssueDate = issueDate;
            ticket.Violation = violation;
            ticket.LicenseNumber = licenseNumber;
            return ticket;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                if (_TicketId != value)
                {
                    OnTicketIdChanging(value);
                    ReportPropertyChanging("TicketId");
                    _TicketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketId");
                    OnTicketIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketId;
        partial void OnTicketIdChanging(global::System.Int32 value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private global::System.DateTime _IssueDate;
        partial void OnIssueDateChanging(global::System.DateTime value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Violation
        {
            get
            {
                return _Violation;
            }
            set
            {
                OnViolationChanging(value);
                ReportPropertyChanging("Violation");
                _Violation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Violation");
                OnViolationChanged();
            }
        }
        private global::System.String _Violation;
        partial void OnViolationChanging(global::System.String value);
        partial void OnViolationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Ticket_Vehicle", "Vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("EFRecipesModel.FK_Ticket_Vehicle", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("EFRecipesModel.FK_Ticket_Vehicle", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("EFRecipesModel.FK_Ticket_Vehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("EFRecipesModel.FK_Ticket_Vehicle", "Vehicle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="licenseNumber">Initial value of the LicenseNumber property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        public static Vehicle CreateVehicle(global::System.String licenseNumber, global::System.String model)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.LicenseNumber = licenseNumber;
            vehicle.Model = model;
            return vehicle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                if (_LicenseNumber != value)
                {
                    OnLicenseNumberChanging(value);
                    ReportPropertyChanging("LicenseNumber");
                    _LicenseNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LicenseNumber");
                    OnLicenseNumberChanged();
                }
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Ticket_Vehicle", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("EFRecipesModel.FK_Ticket_Vehicle", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("EFRecipesModel.FK_Ticket_Vehicle", "Ticket", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
