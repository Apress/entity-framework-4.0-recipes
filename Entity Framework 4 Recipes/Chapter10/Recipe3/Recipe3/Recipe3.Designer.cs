//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EFRecipesModel", "FK_ATMWithdrawal_ATMMachine", "ATMMachine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe3.ATMMachine), "ATMWithdrawal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe3.ATMWithdrawal), true)]

#endregion

namespace Recipe3
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ATMMachine> ATMMachines
        {
            get
            {
                if ((_ATMMachines == null))
                {
                    _ATMMachines = base.CreateObjectSet<ATMMachine>("ATMMachines");
                }
                return _ATMMachines;
            }
        }
        private ObjectSet<ATMMachine> _ATMMachines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ATMWithdrawal> ATMWithdrawals
        {
            get
            {
                if ((_ATMWithdrawals == null))
                {
                    _ATMWithdrawals = base.CreateObjectSet<ATMWithdrawal>("ATMWithdrawals");
                }
                return _ATMWithdrawals;
            }
        }
        private ObjectSet<ATMWithdrawal> _ATMWithdrawals;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ATMMachines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToATMMachines(ATMMachine aTMMachine)
        {
            base.AddObject("ATMMachines", aTMMachine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ATMWithdrawals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToATMWithdrawals(ATMWithdrawal aTMWithdrawal)
        {
            base.AddObject("ATMWithdrawals", aTMWithdrawal);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="aTMId">No Metadata Documentation available.</param>
        /// <param name="withdrawalDate">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetWithdrawls(Nullable<global::System.Int32> aTMId, Nullable<global::System.DateTime> withdrawalDate)
        {
            ObjectParameter aTMIdParameter;
            if (aTMId.HasValue)
            {
                aTMIdParameter = new ObjectParameter("ATMId", aTMId);
            }
            else
            {
                aTMIdParameter = new ObjectParameter("ATMId", typeof(global::System.Int32));
            }
    
            ObjectParameter withdrawalDateParameter;
            if (withdrawalDate.HasValue)
            {
                withdrawalDateParameter = new ObjectParameter("WithdrawalDate", withdrawalDate);
            }
            else
            {
                withdrawalDateParameter = new ObjectParameter("WithdrawalDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetWithdrawls", aTMIdParameter, withdrawalDateParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="ATMMachine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ATMMachine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ATMMachine object.
        /// </summary>
        /// <param name="aTMId">Initial value of the ATMId property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static ATMMachine CreateATMMachine(global::System.Int32 aTMId, global::System.String location)
        {
            ATMMachine aTMMachine = new ATMMachine();
            aTMMachine.ATMId = aTMId;
            aTMMachine.Location = location;
            return aTMMachine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ATMId
        {
            get
            {
                return _ATMId;
            }
            set
            {
                if (_ATMId != value)
                {
                    OnATMIdChanging(value);
                    ReportPropertyChanging("ATMId");
                    _ATMId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ATMId");
                    OnATMIdChanged();
                }
            }
        }
        private global::System.Int32 _ATMId;
        partial void OnATMIdChanging(global::System.Int32 value);
        partial void OnATMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_ATMWithdrawal_ATMMachine", "ATMWithdrawal")]
        public EntityCollection<ATMWithdrawal> ATMWithdrawals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ATMWithdrawal>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMWithdrawal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ATMWithdrawal>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMWithdrawal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="ATMWithdrawal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ATMWithdrawal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ATMWithdrawal object.
        /// </summary>
        /// <param name="withdrawalId">Initial value of the WithdrawalId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="aTMId">Initial value of the ATMId property.</param>
        public static ATMWithdrawal CreateATMWithdrawal(global::System.Int32 withdrawalId, global::System.Decimal amount, global::System.DateTime date, global::System.Int32 aTMId)
        {
            ATMWithdrawal aTMWithdrawal = new ATMWithdrawal();
            aTMWithdrawal.WithdrawalId = withdrawalId;
            aTMWithdrawal.Amount = amount;
            aTMWithdrawal.Date = date;
            aTMWithdrawal.ATMId = aTMId;
            return aTMWithdrawal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WithdrawalId
        {
            get
            {
                return _WithdrawalId;
            }
            set
            {
                if (_WithdrawalId != value)
                {
                    OnWithdrawalIdChanging(value);
                    ReportPropertyChanging("WithdrawalId");
                    _WithdrawalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WithdrawalId");
                    OnWithdrawalIdChanged();
                }
            }
        }
        private global::System.Int32 _WithdrawalId;
        partial void OnWithdrawalIdChanging(global::System.Int32 value);
        partial void OnWithdrawalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ATMId
        {
            get
            {
                return _ATMId;
            }
            set
            {
                OnATMIdChanging(value);
                ReportPropertyChanging("ATMId");
                _ATMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ATMId");
                OnATMIdChanged();
            }
        }
        private global::System.Int32 _ATMId;
        partial void OnATMIdChanging(global::System.Int32 value);
        partial void OnATMIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_ATMWithdrawal_ATMMachine", "ATMMachine")]
        public ATMMachine ATMMachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATMMachine>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMMachine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATMMachine>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMMachine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ATMMachine> ATMMachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATMMachine>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMMachine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ATMMachine>("EFRecipesModel.FK_ATMWithdrawal_ATMMachine", "ATMMachine", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
