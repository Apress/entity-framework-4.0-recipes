//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace TrainReservation
{
    public partial class Schedule
    {
        #region Primitive Properties
    
        public virtual int ScheduleId
        {
            get;
            set;
        }
    
        public virtual int TrainId
        {
            get { return _trainId; }
            set
            {
                if (_trainId != value)
                {
                    if (Train != null && Train.TrainId != value)
                    {
                        Train = null;
                    }
                    _trainId = value;
                }
            }
        }
        private int _trainId;
    
        public virtual System.DateTime ArrivalDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime DepartureDate
        {
            get;
            set;
        }
    
        public virtual string LeavesFrom
        {
            get;
            set;
        }
    
        public virtual string ArrivesAt
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Reservation> Reservations
        {
            get
            {
                if (_reservations == null)
                {
                    var newCollection = new FixupCollection<Reservation>();
                    newCollection.CollectionChanged += FixupReservations;
                    _reservations = newCollection;
                }
                return _reservations;
            }
            set
            {
                if (!ReferenceEquals(_reservations, value))
                {
                    var previousValue = _reservations as FixupCollection<Reservation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupReservations;
                    }
                    _reservations = value;
                    var newValue = value as FixupCollection<Reservation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupReservations;
                    }
                }
            }
        }
        private ICollection<Reservation> _reservations;
    
        public virtual Train Train
        {
            get { return _train; }
            set
            {
                if (!ReferenceEquals(_train, value))
                {
                    var previousValue = _train;
                    _train = value;
                    FixupTrain(previousValue);
                }
            }
        }
        private Train _train;

        #endregion
        #region Association Fixup
    
        private void FixupTrain(Train previousValue)
        {
            if (previousValue != null && previousValue.Schedules.Contains(this))
            {
                previousValue.Schedules.Remove(this);
            }
    
            if (Train != null)
            {
                if (!Train.Schedules.Contains(this))
                {
                    Train.Schedules.Add(this);
                }
                if (TrainId != Train.TrainId)
                {
                    TrainId = Train.TrainId;
                }
            }
        }
    
        private void FixupReservations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Reservation item in e.NewItems)
                {
                    item.Schedule = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Reservation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Schedule, this))
                    {
                        item.Schedule = null;
                    }
                }
            }
        }

        #endregion
    }
}
