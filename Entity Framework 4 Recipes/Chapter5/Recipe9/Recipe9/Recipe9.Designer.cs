//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

#region EDM Relationship Metadata
[assembly: EdmRelationshipAttribute("EFRecipesModel", "FK_Appointment_Doctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe9.Doctor), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe9.Appointment), true)]
[assembly: EdmRelationshipAttribute("EFRecipesModel", "FK_Appointment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recipe9.Patient), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recipe9.Appointment), true)]
#endregion

namespace Recipe9
{
    #region Contexts
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFRecipesEntities : ObjectContext
    {
        #region Constructors
        /// <summary>
        /// Initializes a new EFRecipesEntities object using the connection string found in the 'EFRecipesEntities' section of the application configuration file.
        /// </summary>
        public EFRecipesEntities() : base("name=EFRecipesEntities", "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(string connectionString) : base(connectionString, "EFRecipesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFRecipesEntities object.
        /// </summary>
        public EFRecipesEntities(EntityConnection connection) : base(connection, "EFRecipesEntities")
        {
            OnContextCreated();
        }
        #endregion
        
        #region Partial Methods
        partial void OnContextCreated();
        #endregion
        
        #region ObjectSet Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointments
        {
            get
            {
                if ((_Appointments == null))
                {
                    _Appointments = base.CreateObjectSet<Appointment>("Appointments");
                }
                return _Appointments;
            }
        }
        private ObjectSet<Appointment> _Appointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        #endregion
        #region AddTo Methods
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointments(Appointment appointment)
        {
            base.AddObject("Appointments", appointment);
        }
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
            
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
        #endregion
    }
    
    #endregion
    
    
    #region Entities
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="appointmentId">Initial value of the AppointmentId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="fee">Initial value of the Fee property.</param>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        public static Appointment CreateAppointment(global::System.Int32 appointmentId, global::System.DateTime date, global::System.String reason, global::System.Decimal fee, global::System.Int32 doctorId, global::System.Int32 patientId)
        {
            Appointment appointment = new Appointment();
            appointment.AppointmentId = appointmentId;
            
            appointment.Date = date;
            
            appointment.Reason = reason;
            
            appointment.Fee = fee;
            
            appointment.DoctorId = doctorId;
            
            appointment.PatientId = patientId;
            
            return appointment;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppointmentId
        {
            get
            {
                return _AppointmentId;
            }
            set
            {
                if (_AppointmentId != value)
                {
                    OnAppointmentIdChanging(value);
                    ReportPropertyChanging("AppointmentId");
                    _AppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppointmentId");
                    OnAppointmentIdChanged();
                }
            }
                
        }
        private global::System.Int32 _AppointmentId;
        partial void OnAppointmentIdChanging(global::System.Int32 value);
        partial void OnAppointmentIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
                
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
                
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
                
        }
        private global::System.Decimal _Fee;
        partial void OnFeeChanging(global::System.Decimal value);
        partial void OnFeeChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
                
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
                
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Appointment_Doctor", "Doctor")] 
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("EFRecipesModel.FK_Appointment_Doctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("EFRecipesModel.FK_Appointment_Doctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("EFRecipesModel.FK_Appointment_Doctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("EFRecipesModel.FK_Appointment_Doctor", "Doctor", value);
                }
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Appointment_Patient", "Patient")] 
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("EFRecipesModel.FK_Appointment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("EFRecipesModel.FK_Appointment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("EFRecipesModel.FK_Appointment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("EFRecipesModel.FK_Appointment_Patient", "Patient", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Doctor CreateDoctor(global::System.Int32 doctorId, global::System.String name)
        {
            Doctor doctor = new Doctor();
            doctor.DoctorId = doctorId;
            
            doctor.Name = name;
            
            return doctor;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                if (_DoctorId != value)
                {
                    OnDoctorIdChanging(value);
                    ReportPropertyChanging("DoctorId");
                    _DoctorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorId");
                    OnDoctorIdChanged();
                }
            }
                
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
                
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Appointment_Doctor", "Appointment")] 
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("EFRecipesModel.FK_Appointment_Doctor", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("EFRecipesModel.FK_Appointment_Doctor", "Appointment", value);
                }
            }
        }
        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFRecipesModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Patient CreatePatient(global::System.Int32 patientId, global::System.String name)
        {
            Patient patient = new Patient();
            patient.PatientId = patientId;
            
            patient.Name = name;
            
            return patient;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                if (_PatientId != value)
                {
                    OnPatientIdChanging(value);
                    ReportPropertyChanging("PatientId");
                    _PatientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientId");
                    OnPatientIdChanged();
                }
            }
                
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
        
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
                
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
        
        #endregion
    
        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFRecipesModel", "FK_Appointment_Patient", "Appointment")] 
        public EntityCollection<Appointment> Appointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("EFRecipesModel.FK_Appointment_Patient", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("EFRecipesModel.FK_Appointment_Patient", "Appointment", value);
                }
            }
        }
        #endregion
    }
    
    #endregion
    
}
